name: Deploy Strapi to ECS (Blue/Green)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-2
      CODEDEPLOY_APP: strapi-cd-app-siya
      CODEDEPLOY_DEPLOYMENT_GROUP: strapi-cd-dg-siya

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Register ECS Task Definition
        id: register_taskdef
        run: |
          TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://task-definition.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV
          echo "taskDefinitionArn=$TASK_DEF_ARN" >> $GITHUB_OUTPUT

      - name: Trigger CodeDeploy Deployment
        run: |
          echo "Generating AppSpecContent..."

          CONTENT=$(cat <<EOF
version: 1
Resources:
  - TargetService:
      Type: AWS::ECS::Service
      Properties:
        TaskDefinition: "$TASK_DEF_ARN"
        LoadBalancerInfo:
          ContainerName: "strapi"
          ContainerPort: 1337
EOF
)

          JSON=$(jq -n \
            --arg app "$CODEDEPLOY_APP" \
            --arg dg "$CODEDEPLOY_DEPLOYMENT_GROUP" \
            --arg content "$CONTENT" \
            --arg region "$AWS_REGION" \
            '{
              applicationName: $app,
              deploymentGroupName: $dg,
              revision: {
                revisionType: "AppSpecContent",
                appSpecContent: {
                  content: $content
                }
              }
            }')

          echo "Creating deployment..."
          echo "$JSON" > input.json
          aws deploy create-deployment \
            --cli-input-json file://input.json \
            --region "$AWS_REGION"

